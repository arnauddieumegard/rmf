/*******************************************************************************
 * Copyright (c) 2011 itemis GmbH.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Nirmal Sasidharan - initial API and implementation
 ******************************************************************************/

package org.eclipse.rmf.xhtml.validation;

import org.eclipse.rmf.xhtml.XhtmlAddressType;
import org.eclipse.rmf.xhtml.XhtmlBlockquoteType;
import org.eclipse.rmf.xhtml.XhtmlDivType;
import org.eclipse.rmf.xhtml.XhtmlDlType;
import org.eclipse.rmf.xhtml.XhtmlEditType;
import org.eclipse.rmf.xhtml.XhtmlH1Type;
import org.eclipse.rmf.xhtml.XhtmlH2Type;
import org.eclipse.rmf.xhtml.XhtmlH3Type;
import org.eclipse.rmf.xhtml.XhtmlH4Type;
import org.eclipse.rmf.xhtml.XhtmlH5Type;
import org.eclipse.rmf.xhtml.XhtmlH6Type;
import org.eclipse.rmf.xhtml.XhtmlOlType;
import org.eclipse.rmf.xhtml.XhtmlPType;
import org.eclipse.rmf.xhtml.XhtmlPreType;
import org.eclipse.rmf.xhtml.XhtmlTableType;
import org.eclipse.rmf.xhtml.XhtmlUlType;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

/**
 * A sample validator interface for {@link org.eclipse.rmf.xhtml.XhtmlBlockquoteType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface XhtmlBlockquoteTypeValidator {
	boolean validate();

	boolean validateXhtmlBlockMix(FeatureMap value);
	boolean validateH1(EList<XhtmlH1Type> value);
	boolean validateH2(EList<XhtmlH2Type> value);
	boolean validateH3(EList<XhtmlH3Type> value);
	boolean validateH4(EList<XhtmlH4Type> value);
	boolean validateH5(EList<XhtmlH5Type> value);
	boolean validateH6(EList<XhtmlH6Type> value);
	boolean validateUl(EList<XhtmlUlType> value);
	boolean validateOl(EList<XhtmlOlType> value);
	boolean validateDl(EList<XhtmlDlType> value);
	boolean validateP(EList<XhtmlPType> value);
	boolean validateDiv(EList<XhtmlDivType> value);
	boolean validatePre(EList<XhtmlPreType> value);
	boolean validateBlockquote(EList<XhtmlBlockquoteType> value);
	boolean validateAddress(EList<XhtmlAddressType> value);
	boolean validateHr(EList<Object> value);
	boolean validateTable(EList<XhtmlTableType> value);
	boolean validateIns(EList<XhtmlEditType> value);
	boolean validateDel(EList<XhtmlEditType> value);
	boolean validateCite(String value);
	boolean validateClass(String value);
	boolean validateId(String value);
	boolean validateLang(Object value);
	boolean validateSpace(Object value);
	boolean validateStyle(String value);
	boolean validateTitle(String value);
}
